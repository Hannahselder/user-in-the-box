simulator_name: "mobl_arms_unity_demo"

simulation:
  bm_model:
    cls: "MoblArms"
    kwargs:
      shoulder_variant: "none"
  task:
    cls: "UnityDemo"
    kwargs:
      unity_executable: "build/build.x86_64"
      standalone: True # set to False for debugging (open the app in Unity editor)
      #port: 5555 # uncomment for debugging (connects to this port instead of finding a random open one)
      time_scale: 5
      right_controller_body: "hand"
      right_controller_relpose: [-0.01772321, 0.01274328, -0.07052886, 0.7901813, -0.3503278, -0.4854591, 0.1311998]
      headset_body: "thorax"
      headset_relpose: [-0.10703, 0.001594, -0.19141, 0.7071068, 0.7071068, 0, 0]
  perception_modules:
    - cls: "vision.UnityHeadset"
      kwargs:
        resolution: [120, 80] # must match dimensions used in unity
        channels: [0,1,2,3]
    - cls: "proprioception.BasicWithEndEffectorPosition"
      kwargs:
        end_effector: ["geom", "hand_2distph"]
  run_parameters:
    action_sample_freq: 20

rl:
  algorithm: "PPO"
  policy_type: "policies.MultiInputActorCriticPolicyTanhActions"
  policy_kwargs:
    activation_fn: "torch.nn.LeakyReLU"
    net_arch: [256, 256]
    log_std_init: 0.0
    features_extractor_class: "feature_extractor.FeatureExtractor"
    normalize_images: False
  lr: 
    function: "schedule.linear_schedule"
    kwargs:
      initial_value: 5e-5
      min_value: 1e-7
      threshold: 0.8
  total_timesteps: 100_000_000
  device: "cuda"
  num_workers: 5
  nsteps: 8000
  batch_size: 1000
  target_kl: 1.0
  save_freq: 5_000_000